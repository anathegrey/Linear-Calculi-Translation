-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.12 from Parser.y
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_parse1 -> Env                               (0)
	%start_parse2 -> Term                              (1)
	%start_parse3 -> Store                             (2)
	%start_parse4 -> LEnv                              (3)
	%start_parse5 -> LTerm                             (4)
	%start_parse6 -> LStore                            (5)
	Env ->                                             (6)
	Env -> Env ',' E1                                  (7)
	Env -> E1                                          (8)
	E1 -> var ':' Type                                 (9)
	Store ->                                           (10)
	Store -> Store ',' S                               (11)
	Store -> S                                         (12)
	S -> var ':' Values                                (13)
	Term -> var                                        (14)
	Term -> Qual '<' Term ',' Term '>'                 (15)
	Term -> split Term as var ',' var in Term          (16)
	Term -> Qual '\\' var ':' Type '.' Term            (17)
	Term -> Term Term                                  (18)
	Term -> '(' Term ')'                               (19)
	Qual -> "lin"                                      (20)
	Qual -> "un"                                       (21)
	Type -> '(' Type ')'                               (22)
	Type -> Qual PreType                               (23)
	PreType -> "Bool"                                  (24)
	PreType -> Type "->" Type                          (25)
	PreType -> Type '*' Type                           (26)
	PreType -> var                                     (27)
	PreType -> '(' PreType ')'                         (28)
	Values -> Qual PreValues                           (29)
	PreValues -> '<' var ',' var '>'                   (30)
	PreValues -> '\\' var ':' Type '.' Term            (31)
	LEnv ->                                            (32)
	LEnv -> LEnv ',' LE1                               (33)
	LEnv -> LE1                                        (34)
	LE1 -> var ':' Pi LType                            (35)
	LStore ->                                          (36)
	LStore -> LStore ',' LS                            (37)
	LStore -> LS                                       (38)
	LS -> var ':' LTerm                                (39)
	LTerm -> var                                       (40)
	LTerm -> Pi '<' LTerm ',' LTerm '>'                (41)
	LTerm -> split LTerm as var ',' var in LTerm       (42)
	LTerm -> '\\' Pi var ':' LType '.' LTerm           (43)
	LTerm -> LTerm LTerm                               (44)
	LTerm -> '(' LTerm ')'                             (45)
	Pi -> "1"                                          (46)
	Pi -> "w"                                          (47)
	LType -> "Bool"                                    (48)
	LType -> LType "->" Pi LType                       (49)
	LType -> LType '*' Pi LType                        (50)
	LType -> var                                       (51)
	LType -> '(' LType ')'                             (52)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	"lin"          { TokenLin }
	"un"           { TokenUn }
	"1"            { TokenOne }
	"w"            { TokenOmega }
	"Bool"         { TokenStringBool }
	'\\'           { TokenLambda }
	"->"           { TokenArrow }
	'*'            { TokenPair }
	'<'            { TokenLess }
	'>'            { TokenBigger }
	'.'            { TokenDot }
	':'            { TokenColon }
	','            { TokenComma }
	'('            { TokenOBrack }
	')'            { TokenCBrack }
	split          { TokenSplit }
	as             { TokenAs }
	in             { TokenIn }
	var            { TokenVar $$ }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_parse1   rule  0
	%start_parse2   rule  1
	%start_parse3   rule  2
	%start_parse4   rule  3
	%start_parse5   rule  4
	%start_parse6   rule  5
	Env             rules 6, 7, 8
	E1              rule  9
	Store           rules 10, 11, 12
	S               rule  13
	Term            rules 14, 15, 16, 17, 18, 19
	Qual            rules 20, 21
	Type            rules 22, 23
	PreType         rules 24, 25, 26, 27, 28
	Values          rule  29
	PreValues       rules 30, 31
	LEnv            rules 32, 33, 34
	LE1             rule  35
	LStore          rules 36, 37, 38
	LS              rule  39
	LTerm           rules 40, 41, 42, 43, 44, 45
	Pi              rules 46, 47
	LType           rules 48, 49, 50, 51, 52

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	','            reduce using rule 6
	var            shift, and enter state 33
	%eof           reduce using rule 6

	Env            goto state 31
	E1             goto state 32

State 1


	"lin"          shift, and enter state 26
	"un"           shift, and enter state 27
	'('            shift, and enter state 28
	split          shift, and enter state 29
	var            shift, and enter state 30

	Term           goto state 24
	Qual           goto state 25

State 2


	','            reduce using rule 10
	var            shift, and enter state 23
	%eof           reduce using rule 10

	Store          goto state 21
	S              goto state 22

State 3


	','            reduce using rule 32
	var            shift, and enter state 20
	%eof           reduce using rule 32

	LEnv           goto state 18
	LE1            goto state 19

State 4


	"1"            shift, and enter state 12
	"w"            shift, and enter state 13
	'\\'           shift, and enter state 14
	'('            shift, and enter state 15
	split          shift, and enter state 16
	var            shift, and enter state 17

	LTerm          goto state 10
	Pi             goto state 11

State 5


	','            reduce using rule 36
	var            shift, and enter state 9
	%eof           reduce using rule 36

	LStore         goto state 7
	LS             goto state 8

State 6




State 7

	%start_parse6 -> LStore .                           (rule 5)
	LStore -> LStore . ',' LS                           (rule 37)

	','            shift, and enter state 51
	%eof           accept


State 8

	LStore -> LS .                                      (rule 38)

	','            reduce using rule 38
	%eof           reduce using rule 38


State 9

	LS -> var . ':' LTerm                               (rule 39)

	':'            shift, and enter state 50


State 10

	%start_parse5 -> LTerm .                            (rule 4)
	LTerm -> LTerm . LTerm                              (rule 44)

	"1"            shift, and enter state 12
	"w"            shift, and enter state 13
	'\\'           shift, and enter state 14
	'('            shift, and enter state 15
	split          shift, and enter state 16
	var            shift, and enter state 17
	%eof           accept

	LTerm          goto state 49
	Pi             goto state 11

State 11

	LTerm -> Pi . '<' LTerm ',' LTerm '>'               (rule 41)

	'<'            shift, and enter state 48


State 12

	Pi -> "1" .                                         (rule 46)

	"Bool"         reduce using rule 46
	'<'            reduce using rule 46
	'('            reduce using rule 46
	var            reduce using rule 46


State 13

	Pi -> "w" .                                         (rule 47)

	"Bool"         reduce using rule 47
	'<'            reduce using rule 47
	'('            reduce using rule 47
	var            reduce using rule 47


State 14

	LTerm -> '\\' . Pi var ':' LType '.' LTerm          (rule 43)

	"1"            shift, and enter state 12
	"w"            shift, and enter state 13

	Pi             goto state 47

State 15

	LTerm -> '(' . LTerm ')'                            (rule 45)

	"1"            shift, and enter state 12
	"w"            shift, and enter state 13
	'\\'           shift, and enter state 14
	'('            shift, and enter state 15
	split          shift, and enter state 16
	var            shift, and enter state 17

	LTerm          goto state 46
	Pi             goto state 11

State 16

	LTerm -> split . LTerm as var ',' var in LTerm      (rule 42)

	"1"            shift, and enter state 12
	"w"            shift, and enter state 13
	'\\'           shift, and enter state 14
	'('            shift, and enter state 15
	split          shift, and enter state 16
	var            shift, and enter state 17

	LTerm          goto state 45
	Pi             goto state 11

State 17

	LTerm -> var .                                      (rule 40)

	"1"            reduce using rule 40
	"w"            reduce using rule 40
	'\\'           reduce using rule 40
	'>'            reduce using rule 40
	','            reduce using rule 40
	'('            reduce using rule 40
	')'            reduce using rule 40
	split          reduce using rule 40
	as             reduce using rule 40
	var            reduce using rule 40
	%eof           reduce using rule 40


State 18

	%start_parse4 -> LEnv .                             (rule 3)
	LEnv -> LEnv . ',' LE1                              (rule 33)

	','            shift, and enter state 44
	%eof           accept


State 19

	LEnv -> LE1 .                                       (rule 34)

	','            reduce using rule 34
	%eof           reduce using rule 34


State 20

	LE1 -> var . ':' Pi LType                           (rule 35)

	':'            shift, and enter state 43


State 21

	%start_parse3 -> Store .                            (rule 2)
	Store -> Store . ',' S                              (rule 11)

	','            shift, and enter state 42
	%eof           accept


State 22

	Store -> S .                                        (rule 12)

	','            reduce using rule 12
	%eof           reduce using rule 12


State 23

	S -> var . ':' Values                               (rule 13)

	':'            shift, and enter state 41


State 24

	%start_parse2 -> Term .                             (rule 1)
	Term -> Term . Term                                 (rule 18)

	"lin"          shift, and enter state 26
	"un"           shift, and enter state 27
	'('            shift, and enter state 28
	split          shift, and enter state 29
	var            shift, and enter state 30
	%eof           accept

	Term           goto state 40
	Qual           goto state 25

State 25

	Term -> Qual . '<' Term ',' Term '>'                (rule 15)
	Term -> Qual . '\\' var ':' Type '.' Term           (rule 17)

	'\\'           shift, and enter state 38
	'<'            shift, and enter state 39


State 26

	Qual -> "lin" .                                     (rule 20)

	"lin"          reduce using rule 20
	"un"           reduce using rule 20
	"Bool"         reduce using rule 20
	'\\'           reduce using rule 20
	'<'            reduce using rule 20
	'('            reduce using rule 20
	var            reduce using rule 20


State 27

	Qual -> "un" .                                      (rule 21)

	"lin"          reduce using rule 21
	"un"           reduce using rule 21
	"Bool"         reduce using rule 21
	'\\'           reduce using rule 21
	'<'            reduce using rule 21
	'('            reduce using rule 21
	var            reduce using rule 21


State 28

	Term -> '(' . Term ')'                              (rule 19)

	"lin"          shift, and enter state 26
	"un"           shift, and enter state 27
	'('            shift, and enter state 28
	split          shift, and enter state 29
	var            shift, and enter state 30

	Term           goto state 37
	Qual           goto state 25

State 29

	Term -> split . Term as var ',' var in Term         (rule 16)

	"lin"          shift, and enter state 26
	"un"           shift, and enter state 27
	'('            shift, and enter state 28
	split          shift, and enter state 29
	var            shift, and enter state 30

	Term           goto state 36
	Qual           goto state 25

State 30

	Term -> var .                                       (rule 14)

	"lin"          reduce using rule 14
	"un"           reduce using rule 14
	'>'            reduce using rule 14
	','            reduce using rule 14
	'('            reduce using rule 14
	')'            reduce using rule 14
	split          reduce using rule 14
	as             reduce using rule 14
	var            reduce using rule 14
	%eof           reduce using rule 14


State 31

	%start_parse1 -> Env .                              (rule 0)
	Env -> Env . ',' E1                                 (rule 7)

	','            shift, and enter state 35
	%eof           accept


State 32

	Env -> E1 .                                         (rule 8)

	','            reduce using rule 8
	%eof           reduce using rule 8


State 33

	E1 -> var . ':' Type                                (rule 9)

	':'            shift, and enter state 34


State 34

	E1 -> var ':' . Type                                (rule 9)

	"lin"          shift, and enter state 26
	"un"           shift, and enter state 27
	'('            shift, and enter state 70

	Qual           goto state 68
	Type           goto state 69

State 35

	Env -> Env ',' . E1                                 (rule 7)

	var            shift, and enter state 33

	E1             goto state 67

State 36

	Term -> split Term . as var ',' var in Term         (rule 16)
	Term -> Term . Term                                 (rule 18)

	"lin"          shift, and enter state 26
	"un"           shift, and enter state 27
	'('            shift, and enter state 28
	split          shift, and enter state 29
	as             shift, and enter state 66
	var            shift, and enter state 30

	Term           goto state 40
	Qual           goto state 25

State 37

	Term -> Term . Term                                 (rule 18)
	Term -> '(' Term . ')'                              (rule 19)

	"lin"          shift, and enter state 26
	"un"           shift, and enter state 27
	'('            shift, and enter state 28
	')'            shift, and enter state 65
	split          shift, and enter state 29
	var            shift, and enter state 30

	Term           goto state 40
	Qual           goto state 25

State 38

	Term -> Qual '\\' . var ':' Type '.' Term           (rule 17)

	var            shift, and enter state 64


State 39

	Term -> Qual '<' . Term ',' Term '>'                (rule 15)

	"lin"          shift, and enter state 26
	"un"           shift, and enter state 27
	'('            shift, and enter state 28
	split          shift, and enter state 29
	var            shift, and enter state 30

	Term           goto state 63
	Qual           goto state 25

State 40

	Term -> Term . Term                                 (rule 18)
	Term -> Term Term .                                 (rule 18)

	"lin"          shift, and enter state 26
	"un"           shift, and enter state 27
	'>'            reduce using rule 18
	','            reduce using rule 18
	'('            shift, and enter state 28
	')'            reduce using rule 18
	split          shift, and enter state 29
	as             reduce using rule 18
	var            shift, and enter state 30
	%eof           reduce using rule 18

	Term           goto state 40
	Qual           goto state 25

State 41

	S -> var ':' . Values                               (rule 13)

	"lin"          shift, and enter state 26
	"un"           shift, and enter state 27

	Qual           goto state 61
	Values         goto state 62

State 42

	Store -> Store ',' . S                              (rule 11)

	var            shift, and enter state 23

	S              goto state 60

State 43

	LE1 -> var ':' . Pi LType                           (rule 35)

	"1"            shift, and enter state 12
	"w"            shift, and enter state 13

	Pi             goto state 59

State 44

	LEnv -> LEnv ',' . LE1                              (rule 33)

	var            shift, and enter state 20

	LE1            goto state 58

State 45

	LTerm -> split LTerm . as var ',' var in LTerm      (rule 42)
	LTerm -> LTerm . LTerm                              (rule 44)

	"1"            shift, and enter state 12
	"w"            shift, and enter state 13
	'\\'           shift, and enter state 14
	'('            shift, and enter state 15
	split          shift, and enter state 16
	as             shift, and enter state 57
	var            shift, and enter state 17

	LTerm          goto state 49
	Pi             goto state 11

State 46

	LTerm -> LTerm . LTerm                              (rule 44)
	LTerm -> '(' LTerm . ')'                            (rule 45)

	"1"            shift, and enter state 12
	"w"            shift, and enter state 13
	'\\'           shift, and enter state 14
	'('            shift, and enter state 15
	')'            shift, and enter state 56
	split          shift, and enter state 16
	var            shift, and enter state 17

	LTerm          goto state 49
	Pi             goto state 11

State 47

	LTerm -> '\\' Pi . var ':' LType '.' LTerm          (rule 43)

	var            shift, and enter state 55


State 48

	LTerm -> Pi '<' . LTerm ',' LTerm '>'               (rule 41)

	"1"            shift, and enter state 12
	"w"            shift, and enter state 13
	'\\'           shift, and enter state 14
	'('            shift, and enter state 15
	split          shift, and enter state 16
	var            shift, and enter state 17

	LTerm          goto state 54
	Pi             goto state 11

State 49

	LTerm -> LTerm . LTerm                              (rule 44)
	LTerm -> LTerm LTerm .                              (rule 44)

	"1"            shift, and enter state 12
	"w"            shift, and enter state 13
	'\\'           shift, and enter state 14
	'>'            reduce using rule 44
	','            reduce using rule 44
	'('            shift, and enter state 15
	')'            reduce using rule 44
	split          shift, and enter state 16
	as             reduce using rule 44
	var            shift, and enter state 17
	%eof           reduce using rule 44

	LTerm          goto state 49
	Pi             goto state 11

State 50

	LS -> var ':' . LTerm                               (rule 39)

	"1"            shift, and enter state 12
	"w"            shift, and enter state 13
	'\\'           shift, and enter state 14
	'('            shift, and enter state 15
	split          shift, and enter state 16
	var            shift, and enter state 17

	LTerm          goto state 53
	Pi             goto state 11

State 51

	LStore -> LStore ',' . LS                           (rule 37)

	var            shift, and enter state 9

	LS             goto state 52

State 52

	LStore -> LStore ',' LS .                           (rule 37)

	','            reduce using rule 37
	%eof           reduce using rule 37


State 53

	LS -> var ':' LTerm .                               (rule 39)
	LTerm -> LTerm . LTerm                              (rule 44)

	"1"            shift, and enter state 12
	"w"            shift, and enter state 13
	'\\'           shift, and enter state 14
	','            reduce using rule 39
	'('            shift, and enter state 15
	split          shift, and enter state 16
	var            shift, and enter state 17
	%eof           reduce using rule 39

	LTerm          goto state 49
	Pi             goto state 11

State 54

	LTerm -> Pi '<' LTerm . ',' LTerm '>'               (rule 41)
	LTerm -> LTerm . LTerm                              (rule 44)

	"1"            shift, and enter state 12
	"w"            shift, and enter state 13
	'\\'           shift, and enter state 14
	','            shift, and enter state 89
	'('            shift, and enter state 15
	split          shift, and enter state 16
	var            shift, and enter state 17

	LTerm          goto state 49
	Pi             goto state 11

State 55

	LTerm -> '\\' Pi var . ':' LType '.' LTerm          (rule 43)

	':'            shift, and enter state 88


State 56

	LTerm -> '(' LTerm ')' .                            (rule 45)

	"1"            reduce using rule 45
	"w"            reduce using rule 45
	'\\'           reduce using rule 45
	'>'            reduce using rule 45
	','            reduce using rule 45
	'('            reduce using rule 45
	')'            reduce using rule 45
	split          reduce using rule 45
	as             reduce using rule 45
	var            reduce using rule 45
	%eof           reduce using rule 45


State 57

	LTerm -> split LTerm as . var ',' var in LTerm      (rule 42)

	var            shift, and enter state 87


State 58

	LEnv -> LEnv ',' LE1 .                              (rule 33)

	','            reduce using rule 33
	%eof           reduce using rule 33


State 59

	LE1 -> var ':' Pi . LType                           (rule 35)

	"Bool"         shift, and enter state 84
	'('            shift, and enter state 85
	var            shift, and enter state 86

	LType          goto state 83

State 60

	Store -> Store ',' S .                              (rule 11)

	','            reduce using rule 11
	%eof           reduce using rule 11


State 61

	Values -> Qual . PreValues                          (rule 29)

	'\\'           shift, and enter state 81
	'<'            shift, and enter state 82

	PreValues      goto state 80

State 62

	S -> var ':' Values .                               (rule 13)

	','            reduce using rule 13
	%eof           reduce using rule 13


State 63

	Term -> Qual '<' Term . ',' Term '>'                (rule 15)
	Term -> Term . Term                                 (rule 18)

	"lin"          shift, and enter state 26
	"un"           shift, and enter state 27
	','            shift, and enter state 79
	'('            shift, and enter state 28
	split          shift, and enter state 29
	var            shift, and enter state 30

	Term           goto state 40
	Qual           goto state 25

State 64

	Term -> Qual '\\' var . ':' Type '.' Term           (rule 17)

	':'            shift, and enter state 78


State 65

	Term -> '(' Term ')' .                              (rule 19)

	"lin"          reduce using rule 19
	"un"           reduce using rule 19
	'>'            reduce using rule 19
	','            reduce using rule 19
	'('            reduce using rule 19
	')'            reduce using rule 19
	split          reduce using rule 19
	as             reduce using rule 19
	var            reduce using rule 19
	%eof           reduce using rule 19


State 66

	Term -> split Term as . var ',' var in Term         (rule 16)

	var            shift, and enter state 77


State 67

	Env -> Env ',' E1 .                                 (rule 7)

	','            reduce using rule 7
	%eof           reduce using rule 7


State 68

	Type -> Qual . PreType                              (rule 23)

	"lin"          shift, and enter state 26
	"un"           shift, and enter state 27
	"Bool"         shift, and enter state 74
	'('            shift, and enter state 75
	var            shift, and enter state 76

	Qual           goto state 68
	Type           goto state 72
	PreType        goto state 73

State 69

	E1 -> var ':' Type .                                (rule 9)

	','            reduce using rule 9
	%eof           reduce using rule 9


State 70

	Type -> '(' . Type ')'                              (rule 22)

	"lin"          shift, and enter state 26
	"un"           shift, and enter state 27
	'('            shift, and enter state 70

	Qual           goto state 68
	Type           goto state 71

State 71

	Type -> '(' Type . ')'                              (rule 22)

	')'            shift, and enter state 105


State 72

	PreType -> Type . "->" Type                         (rule 25)
	PreType -> Type . '*' Type                          (rule 26)

	"->"           shift, and enter state 103
	'*'            shift, and enter state 104


State 73

	Type -> Qual PreType .                              (rule 23)

	"->"           reduce using rule 23
	'*'            reduce using rule 23
	'.'            reduce using rule 23
	','            reduce using rule 23
	')'            reduce using rule 23
	%eof           reduce using rule 23


State 74

	PreType -> "Bool" .                                 (rule 24)

	"->"           reduce using rule 24
	'*'            reduce using rule 24
	'.'            reduce using rule 24
	','            reduce using rule 24
	')'            reduce using rule 24
	%eof           reduce using rule 24


State 75

	Type -> '(' . Type ')'                              (rule 22)
	PreType -> '(' . PreType ')'                        (rule 28)

	"lin"          shift, and enter state 26
	"un"           shift, and enter state 27
	"Bool"         shift, and enter state 74
	'('            shift, and enter state 75
	var            shift, and enter state 76

	Qual           goto state 68
	Type           goto state 101
	PreType        goto state 102

State 76

	PreType -> var .                                    (rule 27)

	"->"           reduce using rule 27
	'*'            reduce using rule 27
	'.'            reduce using rule 27
	','            reduce using rule 27
	')'            reduce using rule 27
	%eof           reduce using rule 27


State 77

	Term -> split Term as var . ',' var in Term         (rule 16)

	','            shift, and enter state 100


State 78

	Term -> Qual '\\' var ':' . Type '.' Term           (rule 17)

	"lin"          shift, and enter state 26
	"un"           shift, and enter state 27
	'('            shift, and enter state 70

	Qual           goto state 68
	Type           goto state 99

State 79

	Term -> Qual '<' Term ',' . Term '>'                (rule 15)

	"lin"          shift, and enter state 26
	"un"           shift, and enter state 27
	'('            shift, and enter state 28
	split          shift, and enter state 29
	var            shift, and enter state 30

	Term           goto state 98
	Qual           goto state 25

State 80

	Values -> Qual PreValues .                          (rule 29)

	','            reduce using rule 29
	%eof           reduce using rule 29


State 81

	PreValues -> '\\' . var ':' Type '.' Term           (rule 31)

	var            shift, and enter state 97


State 82

	PreValues -> '<' . var ',' var '>'                  (rule 30)

	var            shift, and enter state 96


State 83

	LE1 -> var ':' Pi LType .                           (rule 35)
	LType -> LType . "->" Pi LType                      (rule 49)
	LType -> LType . '*' Pi LType                       (rule 50)

	"->"           shift, and enter state 94
	'*'            shift, and enter state 95
	','            reduce using rule 35
	%eof           reduce using rule 35


State 84

	LType -> "Bool" .                                   (rule 48)

	"->"           reduce using rule 48
	'*'            reduce using rule 48
	'.'            reduce using rule 48
	','            reduce using rule 48
	')'            reduce using rule 48
	%eof           reduce using rule 48


State 85

	LType -> '(' . LType ')'                            (rule 52)

	"Bool"         shift, and enter state 84
	'('            shift, and enter state 85
	var            shift, and enter state 86

	LType          goto state 93

State 86

	LType -> var .                                      (rule 51)

	"->"           reduce using rule 51
	'*'            reduce using rule 51
	'.'            reduce using rule 51
	','            reduce using rule 51
	')'            reduce using rule 51
	%eof           reduce using rule 51


State 87

	LTerm -> split LTerm as var . ',' var in LTerm      (rule 42)

	','            shift, and enter state 92


State 88

	LTerm -> '\\' Pi var ':' . LType '.' LTerm          (rule 43)

	"Bool"         shift, and enter state 84
	'('            shift, and enter state 85
	var            shift, and enter state 86

	LType          goto state 91

State 89

	LTerm -> Pi '<' LTerm ',' . LTerm '>'               (rule 41)

	"1"            shift, and enter state 12
	"w"            shift, and enter state 13
	'\\'           shift, and enter state 14
	'('            shift, and enter state 15
	split          shift, and enter state 16
	var            shift, and enter state 17

	LTerm          goto state 90
	Pi             goto state 11

State 90

	LTerm -> Pi '<' LTerm ',' LTerm . '>'               (rule 41)
	LTerm -> LTerm . LTerm                              (rule 44)

	"1"            shift, and enter state 12
	"w"            shift, and enter state 13
	'\\'           shift, and enter state 14
	'>'            shift, and enter state 119
	'('            shift, and enter state 15
	split          shift, and enter state 16
	var            shift, and enter state 17

	LTerm          goto state 49
	Pi             goto state 11

State 91

	LTerm -> '\\' Pi var ':' LType . '.' LTerm          (rule 43)
	LType -> LType . "->" Pi LType                      (rule 49)
	LType -> LType . '*' Pi LType                       (rule 50)

	"->"           shift, and enter state 94
	'*'            shift, and enter state 95
	'.'            shift, and enter state 118


State 92

	LTerm -> split LTerm as var ',' . var in LTerm      (rule 42)

	var            shift, and enter state 117


State 93

	LType -> LType . "->" Pi LType                      (rule 49)
	LType -> LType . '*' Pi LType                       (rule 50)
	LType -> '(' LType . ')'                            (rule 52)

	"->"           shift, and enter state 94
	'*'            shift, and enter state 95
	')'            shift, and enter state 116


State 94

	LType -> LType "->" . Pi LType                      (rule 49)

	"1"            shift, and enter state 12
	"w"            shift, and enter state 13

	Pi             goto state 115

State 95

	LType -> LType '*' . Pi LType                       (rule 50)

	"1"            shift, and enter state 12
	"w"            shift, and enter state 13

	Pi             goto state 114

State 96

	PreValues -> '<' var . ',' var '>'                  (rule 30)

	','            shift, and enter state 113


State 97

	PreValues -> '\\' var . ':' Type '.' Term           (rule 31)

	':'            shift, and enter state 112


State 98

	Term -> Qual '<' Term ',' Term . '>'                (rule 15)
	Term -> Term . Term                                 (rule 18)

	"lin"          shift, and enter state 26
	"un"           shift, and enter state 27
	'>'            shift, and enter state 111
	'('            shift, and enter state 28
	split          shift, and enter state 29
	var            shift, and enter state 30

	Term           goto state 40
	Qual           goto state 25

State 99

	Term -> Qual '\\' var ':' Type . '.' Term           (rule 17)

	'.'            shift, and enter state 110


State 100

	Term -> split Term as var ',' . var in Term         (rule 16)

	var            shift, and enter state 109


State 101

	Type -> '(' Type . ')'                              (rule 22)
	PreType -> Type . "->" Type                         (rule 25)
	PreType -> Type . '*' Type                          (rule 26)

	"->"           shift, and enter state 103
	'*'            shift, and enter state 104
	')'            shift, and enter state 105


State 102

	PreType -> '(' PreType . ')'                        (rule 28)

	')'            shift, and enter state 108


State 103

	PreType -> Type "->" . Type                         (rule 25)

	"lin"          shift, and enter state 26
	"un"           shift, and enter state 27
	'('            shift, and enter state 70

	Qual           goto state 68
	Type           goto state 107

State 104

	PreType -> Type '*' . Type                          (rule 26)

	"lin"          shift, and enter state 26
	"un"           shift, and enter state 27
	'('            shift, and enter state 70

	Qual           goto state 68
	Type           goto state 106

State 105

	Type -> '(' Type ')' .                              (rule 22)

	"->"           reduce using rule 22
	'*'            reduce using rule 22
	'.'            reduce using rule 22
	','            reduce using rule 22
	')'            reduce using rule 22
	%eof           reduce using rule 22


State 106

	PreType -> Type '*' Type .                          (rule 26)

	"->"           reduce using rule 26
	'*'            reduce using rule 26
	'.'            reduce using rule 26
	','            reduce using rule 26
	')'            reduce using rule 26
	%eof           reduce using rule 26


State 107

	PreType -> Type "->" Type .                         (rule 25)

	"->"           reduce using rule 25
	'*'            reduce using rule 25
	'.'            reduce using rule 25
	','            reduce using rule 25
	')'            reduce using rule 25
	%eof           reduce using rule 25


State 108

	PreType -> '(' PreType ')' .                        (rule 28)

	"->"           reduce using rule 28
	'*'            reduce using rule 28
	'.'            reduce using rule 28
	','            reduce using rule 28
	')'            reduce using rule 28
	%eof           reduce using rule 28


State 109

	Term -> split Term as var ',' var . in Term         (rule 16)

	in             shift, and enter state 127


State 110

	Term -> Qual '\\' var ':' Type '.' . Term           (rule 17)

	"lin"          shift, and enter state 26
	"un"           shift, and enter state 27
	'('            shift, and enter state 28
	split          shift, and enter state 29
	var            shift, and enter state 30

	Term           goto state 126
	Qual           goto state 25

State 111

	Term -> Qual '<' Term ',' Term '>' .                (rule 15)

	"lin"          reduce using rule 15
	"un"           reduce using rule 15
	'>'            reduce using rule 15
	','            reduce using rule 15
	'('            reduce using rule 15
	')'            reduce using rule 15
	split          reduce using rule 15
	as             reduce using rule 15
	var            reduce using rule 15
	%eof           reduce using rule 15


State 112

	PreValues -> '\\' var ':' . Type '.' Term           (rule 31)

	"lin"          shift, and enter state 26
	"un"           shift, and enter state 27
	'('            shift, and enter state 70

	Qual           goto state 68
	Type           goto state 125

State 113

	PreValues -> '<' var ',' . var '>'                  (rule 30)

	var            shift, and enter state 124


State 114

	LType -> LType '*' Pi . LType                       (rule 50)

	"Bool"         shift, and enter state 84
	'('            shift, and enter state 85
	var            shift, and enter state 86

	LType          goto state 123

State 115

	LType -> LType "->" Pi . LType                      (rule 49)

	"Bool"         shift, and enter state 84
	'('            shift, and enter state 85
	var            shift, and enter state 86

	LType          goto state 122

State 116

	LType -> '(' LType ')' .                            (rule 52)

	"->"           reduce using rule 52
	'*'            reduce using rule 52
	'.'            reduce using rule 52
	','            reduce using rule 52
	')'            reduce using rule 52
	%eof           reduce using rule 52


State 117

	LTerm -> split LTerm as var ',' var . in LTerm      (rule 42)

	in             shift, and enter state 121


State 118

	LTerm -> '\\' Pi var ':' LType '.' . LTerm          (rule 43)

	"1"            shift, and enter state 12
	"w"            shift, and enter state 13
	'\\'           shift, and enter state 14
	'('            shift, and enter state 15
	split          shift, and enter state 16
	var            shift, and enter state 17

	LTerm          goto state 120
	Pi             goto state 11

State 119

	LTerm -> Pi '<' LTerm ',' LTerm '>' .               (rule 41)

	"1"            reduce using rule 41
	"w"            reduce using rule 41
	'\\'           reduce using rule 41
	'>'            reduce using rule 41
	','            reduce using rule 41
	'('            reduce using rule 41
	')'            reduce using rule 41
	split          reduce using rule 41
	as             reduce using rule 41
	var            reduce using rule 41
	%eof           reduce using rule 41


State 120

	LTerm -> '\\' Pi var ':' LType '.' LTerm .          (rule 43)
	LTerm -> LTerm . LTerm                              (rule 44)

	"1"            shift, and enter state 12
	"w"            shift, and enter state 13
	'\\'           shift, and enter state 14
	'>'            reduce using rule 43
	','            reduce using rule 43
	'('            shift, and enter state 15
	')'            reduce using rule 43
	split          shift, and enter state 16
	as             reduce using rule 43
	var            shift, and enter state 17
	%eof           reduce using rule 43

	LTerm          goto state 49
	Pi             goto state 11

State 121

	LTerm -> split LTerm as var ',' var in . LTerm      (rule 42)

	"1"            shift, and enter state 12
	"w"            shift, and enter state 13
	'\\'           shift, and enter state 14
	'('            shift, and enter state 15
	split          shift, and enter state 16
	var            shift, and enter state 17

	LTerm          goto state 131
	Pi             goto state 11

State 122

	LType -> LType . "->" Pi LType                      (rule 49)
	LType -> LType "->" Pi LType .                      (rule 49)
	LType -> LType . '*' Pi LType                       (rule 50)

	"->"           shift, and enter state 94
	'*'            shift, and enter state 95
	'.'            reduce using rule 49
	','            reduce using rule 49
	')'            reduce using rule 49
	%eof           reduce using rule 49


State 123

	LType -> LType . "->" Pi LType                      (rule 49)
	LType -> LType . '*' Pi LType                       (rule 50)
	LType -> LType '*' Pi LType .                       (rule 50)

	"->"           reduce using rule 50
	'*'            fail
	'.'            reduce using rule 50
	','            reduce using rule 50
	')'            reduce using rule 50
	%eof           reduce using rule 50


State 124

	PreValues -> '<' var ',' var . '>'                  (rule 30)

	'>'            shift, and enter state 130


State 125

	PreValues -> '\\' var ':' Type . '.' Term           (rule 31)

	'.'            shift, and enter state 129


State 126

	Term -> Qual '\\' var ':' Type '.' Term .           (rule 17)
	Term -> Term . Term                                 (rule 18)

	"lin"          shift, and enter state 26
	"un"           shift, and enter state 27
	'>'            reduce using rule 17
	','            reduce using rule 17
	'('            shift, and enter state 28
	')'            reduce using rule 17
	split          shift, and enter state 29
	as             reduce using rule 17
	var            shift, and enter state 30
	%eof           reduce using rule 17

	Term           goto state 40
	Qual           goto state 25

State 127

	Term -> split Term as var ',' var in . Term         (rule 16)

	"lin"          shift, and enter state 26
	"un"           shift, and enter state 27
	'('            shift, and enter state 28
	split          shift, and enter state 29
	var            shift, and enter state 30

	Term           goto state 128
	Qual           goto state 25

State 128

	Term -> split Term as var ',' var in Term .         (rule 16)
	Term -> Term . Term                                 (rule 18)

	"lin"          fail
	"un"           fail
	'>'            reduce using rule 16
	','            reduce using rule 16
	'('            fail
	')'            reduce using rule 16
	split          fail
	as             reduce using rule 16
	var            fail
	%eof           reduce using rule 16

	Term           goto state 40
	Qual           goto state 25

State 129

	PreValues -> '\\' var ':' Type '.' . Term           (rule 31)

	"lin"          shift, and enter state 26
	"un"           shift, and enter state 27
	'('            shift, and enter state 28
	split          shift, and enter state 29
	var            shift, and enter state 30

	Term           goto state 132
	Qual           goto state 25

State 130

	PreValues -> '<' var ',' var '>' .                  (rule 30)

	','            reduce using rule 30
	%eof           reduce using rule 30


State 131

	LTerm -> split LTerm as var ',' var in LTerm .      (rule 42)
	LTerm -> LTerm . LTerm                              (rule 44)

	"1"            fail
	"w"            fail
	'\\'           reduce using rule 42
	'>'            reduce using rule 42
	','            reduce using rule 42
	'('            fail
	')'            reduce using rule 42
	split          fail
	as             reduce using rule 42
	var            fail
	%eof           reduce using rule 42

	LTerm          goto state 49
	Pi             goto state 11

State 132

	Term -> Term . Term                                 (rule 18)
	PreValues -> '\\' var ':' Type '.' Term .           (rule 31)

	"lin"          shift, and enter state 26
	"un"           shift, and enter state 27
	','            reduce using rule 31
	'('            shift, and enter state 28
	split          shift, and enter state 29
	var            shift, and enter state 30
	%eof           reduce using rule 31

	Term           goto state 40
	Qual           goto state 25

-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 53
Number of terminals: 19
Number of non-terminals: 23
Number of states: 133
